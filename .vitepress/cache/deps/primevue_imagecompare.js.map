{
  "version": 3,
  "sources": ["../../../node_modules/src/imagecompare/style/ImageCompareStyle.js", "../../../node_modules/src/imagecompare/BaseImageCompare.vue", "../../../node_modules/src/imagecompare/ImageCompare.vue", "../../../node_modules/src/imagecompare/ImageCompare.vue?vue&type=template&id=7e6a8988&lang.js"],
  "sourcesContent": ["import BaseStyle from '@primevue/core/base/style';\n\nconst theme = ({ dt }) => `\n.p-imagecompare {\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    aspect-ratio: 16 / 9;\n}\n\n.p-imagecompare img {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n}\n\n.p-imagecompare img + img {\n    clip-path: polygon(0 0, 50% 0, 50% 100%, 0 100%);\n}\n\n.p-imagecompare:dir(rtl) img + img {\n    clip-path: polygon(50% 0, 100% 0, 100% 100%, 50% 100%);\n}\n\n.p-imagecompare-slider {\n    position: relative;\n    -webkit-appearance: none;\n    width: calc(100% + ${dt('imagecompare.handle.size')});\n    height: 100%;\n    margin-inline-start: calc(-1 * calc(${dt('imagecompare.handle.size')} / 2));\n    background-color: transparent;\n    outline: none;\n    transition: all ${dt('imagecompare.handle.transition.duration')};\n}\n\n.p-imagecompare-slider::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: ${dt('imagecompare.handle.size')};\n    width: ${dt('imagecompare.handle.size')};\n    background: ${dt('imagecompare.handle.background')};\n    border: ${dt('imagecompare.handle.border.width')} solid ${dt('imagecompare.handle.border.color')};\n    border-radius: ${dt('imagecompare.handle.border.radius')};\n    background-size: contain;\n    cursor: ew-resize;\n    transition: all ${dt('imagecompare.handle.transition.duration')};\n}\n\n.p-imagecompare-slider::-moz-range-thumb {\n    height: ${dt('imagecompare.handle.size')};\n    width: ${dt('imagecompare.handle.size')};\n    background: ${dt('imagecompare.handle.background')};\n    border: ${dt('imagecompare.handle.border.width')} ${dt('imagecompare.handle.border.style')} ${dt('imagecompare.handle.border.color')};\n    border-radius: ${dt('imagecompare.handle.border.radius')};\n    background-size: contain;\n    cursor: ew-resize;\n}\n\n.p-imagecompare-slider:focus-visible::-webkit-slider-thumb {\n    box-shadow: ${dt('imagecompare.handle.focus.ring.shadow')};\n    outline: ${dt('imagecompare.handle.focus.ring.width')} ${dt('imagecompare.handle.focus.ring.style')} ${dt('imagecompare.handle.focus.ring.color')};\n    outline-offset: ${dt('imagecompare.handle.focus.ring.offset')};\n}\n\n.p-imagecompare-slider:focus-visible::-moz-range-thumb {\n    box-shadow: ${dt('imagecompare.handle.focus.ring.shadow')};\n    outline: ${dt('imagecompare.handle.focus.ring.width')} ${dt('imagecompare.handle.focus.ring.style')} ${dt('imagecompare.handle.focus.ring.color')};\n    outline-offset: ${dt('imagecompare.handle.focus.ring.offset')};\n}\n\n.p-imagecompare-slider:hover {\n    width: calc(100% + ${dt('imagecompare.handle.hover.size')});\n    margin-inline-start: calc(-1 * calc(${dt('imagecompare.handle.hover.size')} / 2));\n}\n\n.p-imagecompare-slider:hover::-webkit-slider-thumb {\n    background: ${dt('imagecompare.handle.hover.background')};\n    border-color: ${dt('imagecompare.handle.hover.border.color')};\n    height: ${dt('imagecompare.handle.hover.size')};\n    width: ${dt('imagecompare.handle.hover.size')};\n}\n\n.p-imagecompare-slider:hover::-moz-range-thumb {\n    background: ${dt('imagecompare.handle.hover.background')};\n    border-color: ${dt('imagecompare.handle.hover.border.color')};\n    height: ${dt('imagecompare.handle.hover.size')};\n    width: ${dt('imagecompare.handle.hover.size')};\n}\n`;\n\nconst classes = {\n    root: 'p-imagecompare',\n    slider: 'p-imagecompare-slider'\n};\n\nexport default BaseStyle.extend({\n    name: 'imagecompare',\n    theme,\n    classes\n});\n", "<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ImageCompareStyle from 'primevue/imagecompare/style';\n\nexport default {\n    name: 'BaseImageCompare',\n    extends: BaseComponent,\n    props: {\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        }\n    },\n    style: ImageCompareStyle,\n    provide() {\n        return {\n            $pcImageCompare: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n", "<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <slot name=\"left\"></slot>\n        <slot name=\"right\"></slot>\n        <input type=\"range\" min=\"0\" max=\"100\" value=\"50\" @input=\"onSlide\" :class=\"cx('slider')\" v-bind=\"ptm('slider')\" />\n    </div>\n</template>\n\n<script>\nimport BaseImageCompare from './BaseImageCompare.vue';\n\nexport default {\n    name: 'ImageCompare',\n    extends: BaseImageCompare,\n    mutationObserver: null,\n    data() {\n        return {\n            isRTL: false\n        };\n    },\n    beforeUnmount() {\n        if (this.mutationObserver) {\n            this.mutationObserver.disconnect();\n        }\n    },\n    mounted() {\n        this.updateDirection();\n        this.observeDirectionChanges();\n    },\n    methods: {\n        onSlide(event) {\n            const value = event.target.value;\n            const image = event.target.previousElementSibling;\n\n            if (this.isRTL) {\n                image.style.clipPath = `polygon(${100 - value}% 0, 100% 0, 100% 100%, ${100 - value}% 100%)`;\n            } else {\n                image.style.clipPath = `polygon(0 0, ${value}% 0, ${value}% 100%, 0 100%)`;\n            }\n        },\n        updateDirection() {\n            this.isRTL = !!this.$el.closest('[dir=\"rtl\"]');\n        },\n        observeDirectionChanges() {\n            const targetNode = document.documentElement;\n            const config = { attributes: true, attributeFilter: ['dir'] };\n\n            this.mutationObserver = new MutationObserver(() => {\n                this.updateDirection();\n            });\n\n            this.mutationObserver.observe(targetNode, config);\n        }\n    }\n};\n</script>\n", "<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <slot name=\"left\"></slot>\n        <slot name=\"right\"></slot>\n        <input type=\"range\" min=\"0\" max=\"100\" value=\"50\" @input=\"onSlide\" :class=\"cx('slider')\" v-bind=\"ptm('slider')\" />\n    </div>\n</template>\n\n<script>\nimport BaseImageCompare from './BaseImageCompare.vue';\n\nexport default {\n    name: 'ImageCompare',\n    extends: BaseImageCompare,\n    mutationObserver: null,\n    data() {\n        return {\n            isRTL: false\n        };\n    },\n    beforeUnmount() {\n        if (this.mutationObserver) {\n            this.mutationObserver.disconnect();\n        }\n    },\n    mounted() {\n        this.updateDirection();\n        this.observeDirectionChanges();\n    },\n    methods: {\n        onSlide(event) {\n            const value = event.target.value;\n            const image = event.target.previousElementSibling;\n\n            if (this.isRTL) {\n                image.style.clipPath = `polygon(${100 - value}% 0, 100% 0, 100% 100%, ${100 - value}% 100%)`;\n            } else {\n                image.style.clipPath = `polygon(0 0, ${value}% 0, ${value}% 100%, 0 100%)`;\n            }\n        },\n        updateDirection() {\n            this.isRTL = !!this.$el.closest('[dir=\"rtl\"]');\n        },\n        observeDirectionChanges() {\n            const targetNode = document.documentElement;\n            const config = { attributes: true, attributeFilter: ['dir'] };\n\n            this.mutationObserver = new MutationObserver(() => {\n                this.updateDirection();\n            });\n\n            this.mutationObserver.observe(targetNode, config);\n        }\n    }\n};\n</script>\n"],
  "mappings": "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",
  "names": ["theme", "_ref", "dt", "concat", "classes", "root", "slider", "BaseStyle", "extend", "name", "name", "BaseComponent", "props", "tabindex", "type", "Number", "ariaLabelledby", "String", "ariaLabel", "style", "ImageCompareStyle", "provide", "$pcImageCompare", "$parentInstance", "script", "BaseImageCompare", "mutationObserver", "data", "isRTL", "beforeUnmount", "disconnect", "mounted", "updateDirection", "observeDirectionChanges", "methods", "onSlide", "event", "value", "target", "image", "previousElementSibling", "clipPath", "concat", "$el", "closest", "_this", "targetNode", "document", "documentElement", "config", "attributes", "attributeFilter", "MutationObserver", "observe", "_openBlock", "_createElementBlock", "_mergeProps", "_ctx", "cx", "ptmi", "_renderSlot", "$slots", "_createElementVNode", "min", "max", "onInput", "$options", "apply", "arguments", "ptm"]
}
